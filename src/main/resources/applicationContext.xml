<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation=
               "http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
			    http://www.springframework.org/schema/context
			    http://www.springframework.org/schema/context/spring-context-3.0.xsd
			    http://www.springframework.org/schema/tx
	            http://www.springframework.org/schema/tx/spring-tx.xsd">
       <context:property-placeholder location="jdbc.properties"/>
       <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
           <property name="jdbcUrl" value="${jdbc.url}"/>
           <property name="driverClass" value="${jdbc.driverClass}"/>
           <property name="password" value="${jdbc.password}"/>
           <property name="user" value="${jdbc.username}"/>
           <!-- 连接池中保留的最大连接数。默认为15 -->
           <property name="maxPoolSize" value="${c3p0.pool.maxPoolSize}"/>
           <!-- 连接池中保留的最小连接数。默认为15 -->
           <property name="minPoolSize" value="${c3p0.pool.minPoolSize}" />
           <!-- 初始化时创建的连接数，应在minPoolSize与maxPoolSize之间取值。默认为3 -->
           <property name="initialPoolSize" value="${c3p0.pool.initialPoolSize}"/>
           <!-- 定义在从数据库获取新连接失败后重复尝试获取的次数，默认为30 -->
           <property name="acquireIncrement" value="${c3p0.pool.acquireIncrement}"/>
       </bean>
       <!--创建SqlSessionFactory对象-->
       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
           <!--关联连接池-->
           <property name="dataSource" ref="dataSource"/>
           <!--加载sql映射文件（加上通配符*可以一次映射所有文件）-->
           <property name="mapperLocations" value="classpath:Mapper/*.xml"/>
       </bean>
       <!--创建CustomerMapperImpl对象，注入SqlSessionFactory-->
      <!-- <bean id="CustomerMapper" class="com.cn.Impl.CustomerMapperImpl1">-->
           <!--关联sqlSessionFactory-->
           <!--<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
       </bean>-->


       <!--配置Mapper接口-->
       <!--<bean id="customerMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
           &lt;!&ndash;关联Mapper接口&ndash;&gt;
           <property name="mapperInterface" value="com.cn.Dao.CustomerMapper"/>
           &lt;!&ndash;关联SqlSessionFactory&ndash;&gt;
           <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
       </bean>-->


       <!--Mapper接口的扫描-->
       <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--配置Mapper接口所在包路径-->
        <property name="basePackage" value="com.cn.Dao"/>
       </bean>
       <!--开启Spring的IOC的注解扫描-->
       <context:component-scan base-package="com.cn">
       </context:component-scan>
       <!--开启Spring的事务-->
       <!--事务管理器-->
       <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
           <property name="dataSource" ref="dataSource"/>
       </bean>
       <!--启用事务注解-->
       <tx:annotation-driven transaction-manager="transactionManager" />
</beans>